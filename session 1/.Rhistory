knitr::opts_chunk$set(echo=T, eval=F, cache = T)
install.packages(
c("readxl", "ggplot2", "dplyr") # Install multiple pkgs
)
install.packages(c("readxl", "ggplot2", "dplyr"))
library(abind)
library(dplyr)
library("dplyr")
getwd()
setwd("C:/Users/Tek/Desktop/RWorkshop/Session 1")
knitr::opts_chunk$set(echo=T, eval=F, cache = T)
# Assign as "df"
df<-read.csv("csv_example.csv") # A file "csv_example.csv" is in your cwd
df<-read.csv("data/csv_example.csv") # "csv_example.csv" is in data folder inside cwd
str(Df)
str(df)
# Commonly used arguments
df<-read.csv("csv_example.csv", stringsAsFactors = T)
# Commonly used arguments
df<-read.csv("data/csv_example.csv", stringsAsFactors = T)
str(df)
# Commonly used arguments
df2<-read.csv("data/csv_example.csv", stringsAsFactors = T)
str(df2)
list.dirs()
list.files()
1.7/3
read.csv("data/semicol.csv")
read.csv("data/semicol.csv", header = F, sep = ";")
.GlobalEnv
environment()
g <- function(g_x){
print("Inside g")
print(environment())
print(ls())
}
g
g(5)
# Assign into the environment in which they are evaluated
# Compare with <<-
<-    # Can be used anywhere
g=function(){
x<-"save this string";
print(environment())
print(ls())
}
g
g()
ls()
f=function(){
x<<-"saved to the global environment";
print(environment())
print(ls())
}
f()
f
f()
environment()
ls()
c=0
a=b=c
a
c
b
rm(list=ls())
x <<- value<="" code="">
x<<-1
x
`name with space`<-1
::
`::`
search()
1+2 < 1*2
T|F
T|F & T
F&T
T|F&T
T+1
2|T
2&T
2&T
1+2 < 1*2
1+2 < 1*2
1+2 < 1*2 | T
1+2 < 1*2 & T
++1
++2
a = 10, b = 20, c = 30
a = 10; b = 20; c = 30
c>b>a
c > b > a
c>b
b>a
c > b & b >a
100 + 200 / 10 - 3 * 10
201 %% 10
201 %/% 10
201 %/% 10 /5
x=T
x=
y=F
x | y
Negate(T)
Negate(TRUE)
`%!in%` <- function(a,b) ! a %in% b
a=c(1,2,3)
b=c(3,4,5)
a %in b
a %in% b
b %in% a
proc.time(  vec = NULL # Or vec = c()
for (i in seq_len(n))
vec = c(vec, i)
vec)
proc.time(
vec = NULL;
system.time(
vec = NULL;
system.time(
vec = NULL;
proc.time(
vec = NULL;
Sys.time(
vec = NULL;
Sys.time()
vec = NULL;
Sys.time(
# vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
)
n=10^6
start_time <- Sys.time()
vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
n=10^2
start_time <- Sys.time()
vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
n=10^2
start_time <- Sys.time()
vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
Sys.time() - start_time
start_time <- Sys.time()
vec = numeric(n);
for (i in seq_len(n)){
vec[i] = i
}
Sys.time() - start_time
n=10^3
start_time <- Sys.time()
vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
Sys.time() - start_time
start_time <- Sys.time()
vec = numeric(n);
for (i in seq_len(n)){
vec[i] = i
}
Sys.time() - start_time
n=10^3
start_time <- Sys.time()
vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
Sys.time() - start_time
n=10^4
start_time <- Sys.time()
vec = NULL;
for (i in seq_len(n)){
vec = c(vec, i)
}
Sys.time() - start_time
start_time <- Sys.time()
vec = numeric(n);
for (i in seq_len(n)){
vec[i] = i
}
Sys.time() - start_time
a=c(1,2,3)
b=c(3,4,5)
a&b
(a ==3)
(a ==3) & (b == 3)
(a ==3) && (b == 3)
(a ==3) & (b == 5)
(a ==3) && (b == 5)
(b == 5)
(a ==3)
(a ==3) | (b == 5)
(a ==3) || (b == 5)
