mydata <- LifeCycleSavings
str(mydata)
x=diag(3)
x
v=c(1,2,3)
v*x
v %*% x
v %*% v
v*v
v %o% v
v %x% v
cars
mtcars
201 %/% 10
(8<7):10
(8>7):10
knitr::opts_chunk$set(echo=T, eval=F, cache = T)
a="apple"; b="banana"
a == b
a != b
a="apple"; b="banana"
a == b
a != b
!(a != b)
x=1:10; y=5:15
x %in% y   # What is in x that is also in y
x=1:10; y=5:15
x %in% y   # What is in x that is also in y
# How to code "what is in x that is not in y
! x %in% y
x=1:10; y=5:15
x %in% y   # What is in x that is also in y
# How to code "what is in x that is not in y
# ! x %in% y
x=1:10; y=6:15
x %in% y   # What is in x that is also in y
# How to code "what is in x that is not in y
# ! x %in% y
!y
y
0==T
0==F
3==T
1==T
T+T
c(T, T) | c(T, F)
c(T, T, T) | c(T, F)
T|T; T|F; F|F
c(T, T, F) | c(T, F, F)
c(T, T, F) || c(T, F, F)
T&T; T&F; F&F
c(T, T, F) & c(T, F, F)
c(T, T, F) && c(T, F, F)
(veggies=="cabbage")
veggies=c("cabbage", "lettuce","onion")
fruits=c("apple", "banana", "mango")
(veggies=="cabbage")
(veggies=="cabbage") & (fruits=="apple")
(veggies=="cabbage") & (fruits %in% c("apple", "banana"))
(veggies=="lettuce") && (fruits %in% c("apple", "banana"))
(veggies=="lettuce")
(fruits %in% c("apple", "banana"))
(veggies=="lettuce") && (fruits %in% c("apple", "banana"))
c(T, T, F) && c(T, F, F)
x<-10
x>10; x>=10
x<-10
x > 5 & x < 10
x<-10
x > 5 & x < 12
x<-5
x >= 3 & x < 6
y=c(1, 3, 5, 7)
y >= 3 & y < 6
!c(T, T)
fruits == c("apple", "banana")
fruits=="apple"
"apple"==fruits
fruits=="apple"; "apple" == fruits
fruits == c("apple", "banana")
fruits %in% c("apple", "banana")
c("apple", "banana") %in% fruits
c(T, T, F) && c(T, F, F)
y >= 3 && y < 6
y >= 3 | y < 6
y <= 3 | y > 6
x<-5
x >= 3 & x < 6
y=c(1, 3, 5, 7)
y >= 3 & y < 6
y >= 3 && y < 6
y <= 3 | y > 6
y <= 3 || y > 6
y <= 3 && y > 6
all(c(T,T,F))
any(c(T,T,F))
y >= 3
y < 6
y >= 3 & y < 6
c(F,T, T, T) && c(T, T, T, F)
c(T,T, T, F) && c(T, T, T, F)
c(T,T, T, T) && c(T, T, T, F)
c(T,T, T, T) && c(T, T, T, F)
c(T,T, T, T) && c(T, F, F, F)
!F|F&T
T|F&T
!T|F&T
T|!F&T
T|F&!T
x<-1:5
! x >3
x<-1:5
! x < 3
! c(TRUE, F, FALSE, 1)
T|F&c(T, F)
F&c(T, F)
F|T&c(T, F)
T&F|c(T, F)
!F|T&c(T, F)
a=5
c=(b=a+2)-(a=1)
c
b
a
a=5
c=(b=a+2)-(a=a-1)
a
b
c
201 %/% 10 / 5
100 + 200 / 10 - 3 * 10
! x < 3
! x < 3
setwd("/")
getwd()
setwd("~")
getwd()
setwd(".") # Directory where this slide was generated
getwd()
setwd("./..")  # Note: You can start anywhere
getwd()
list.dirs()
Sys.sleep()
Sys.sleep(10)
Sys.sleep(60)
x<-1:5   # Check the 3rd pane
plot(x)
Sys.sleep(60)
# Try to navigate to your working directory
setwd(choose.dir())
getwd()
list.dirs()
dir()
list.files()
list.files(pattern=".*\\.html")  # list any file with .html extension
dir(pattern=".*\\.html")         # list any file with .html extension
dir.create("new_directory_name")
dir.create("new_directory_name")
dir.create("new_directory_name", showWarnings=F)
# Create a new directory
dir.create("new_dir")
# Create a new file
file.create("new_dir/new_text_file.txt")
# Remove a directory or a file
unlink("new_dir/new_text_file.txt")
unlink("new_dir", recursive = T)
readLines("https://api.fda.gov/drug/event.json?limit=3" , n = 12) %>%
cat()
library(dplyr)
readLines("https://api.fda.gov/drug/event.json?limit=3" , n = 12) %>%
cat()
# Avoid using names that has special meanings or
c<-"you can do it but..."
c(1)
`next`<-"you can do it but..."
next
`next`
next
`next`
17/2
17%%2
17%/%2
sin(45)
sin(2*pi)
sin(pi/2)
0==F
1==T
T+T
exp(1)
log(exp(1))
log10(10)
TRUE==FALSE
FALSE==FALSE
1:5
3:10
1:5 %in% 3:10
fruits <- c("apple", "banana", "mango")
fruits == "apple"
"apple" == fruits
fruits == c("apple", "banana")
# x %in% y   What is in x that is also in y
fruits %in% c("apple", "banana")
c("apple", "banana") %in% fruits
c(T, T, F) || c(T, F, F)
# `||` is the length-one logical or
c(T, T, F) || c(F, F, F)
# `||` is the length-one logical or
c(F, T, F) || c(F, F, F)
!c(TRUE, F, FALSE)
!c(TRUE, F, 0, 1, 6, "six")
!c(TRUE, F, 0, 1, 6, "six")
!c(TRUE, F, 0, 1, 6)
!"chracter"
c(T, T, F) | c(T, F, F)
# `||` is the length-one logical or
c(T, T, F) || c(F, F, F)
# `||` is the length-one logical or
c(T, F, F) || c(F, F, F)
# `||` is the length-one logical or
c(F, T, F) || c(F, T, F)
# `||` is the length-one logical or
c(T, F, F) || c(F, F, F)
# `||` is the length-one logical or
c(T, F, F) || c(F, F, F)  #
c(F, T, T) || c(F, T, T)
c(T, T, T) && c(F, T, T)
c(T, F, F) && c(T, F, F)
# Examples
x<-5
x >= 3 & x < 6
y=c(1, 3, 5, 7)
y >= 3 & y < 6
y >= 3 && y < 6
y <= 3 | y > 6
y <= 3 || y > 6
y < 6 && y >= 3
17*4+3
71%/%4 / 13 %% 10
a=5
c=(a=a-1)*(b=a=a+2)
a
b
c
x<-1
y<-2
x+y
x<-"run this"
y<-"as well"
print(x, y, collapse=" ")
print(paste0(x, y, collapse=" "))
paste(x, y, collapse=" ")
# Run the following lines:
x<-"Wonderful Job"
y<-"Again"
print(paste(x, y, collapse=" "))
x<-"Again,"
y<-"Wonderful Job"
print(paste(x, y, collapse=" "))
rm(c("a", "b"))
rm(c(a, b))
rm(list=c("a", "b"))
# removing obejcts
rm(fruits)                 # Remove
fruits <- c("apple", "banana", "mango")
rm("fruits")
g=function(){
not_saved <-"saved inside a function envvironment";
}
g()
f=function(){
saved<<-"saved to the global environment"
}
f()
rm(list=setdiff(ls(), c("f", "next")))        # Remove Everything
# Interrupt R: esc or the red stop sign
Sys.Sleep(60)
# Interrupt R: esc or the red stop sign
Sys.sleep(60)
x="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv"
system.time(read.csv(x));
system.time(readr::read_csv(x));
system.time(data.table::fread(x));
x="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv"
system.time(baseR=read.csv(x));
system.time(readr_pkg=readr::read_csv(x));
system.time(dt_pkg=data.table::fread(x));
system.time(baseR=read.csv(x));
system.time(baseR<<-read.csv(x));
x="https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv"
system.time(baseR<<-read.csv(x));
system.time(readr_pkg<<-readr::read_csv(x));
system.time(dt_pkg<<-data.table::fread(x));
identical(baseR, dt_pkg)
identical(dt_pkg, readr_pkg)
View(baseR)
View(dt_pkg)
View(readr_pkg)
system.time(baseR<<-read.csv(x));
system.time(readr_pkg<<-readr::read_csv(x));
system.time(dt_pkg<<-data.table::fread(x));
mydata<-read.csv(x)  # I am going to name it "mydata" this time
# Other packages and functions that reads csv format
# May need to install additional packages
mydata2 <- readr::read_csv(x)
mydata3 <- data.table::fread(x)
system.time(read.csv(x));
system.time(readr::read_csv(x));
system.time(data.table::fread(x));
# removing obejcts
rm("fruits")                            # Remove fruits
rm(list=c("x", "y"))                    # Remove x and y
rm(list=setdiff(ls(), c("f", "next")))  # Remove Everything except f and next
rm(list=ls())                           # Remove Everything
# Release memory
gc()
gc()
# Release memory
gc(verbose=T)
# Release memory
double gc(verbose=T)
gc()
gc()
!F|T&c(T, F)
`2df`<-1:5
2df
`2df`
sin(pi/2)
e
7325/3600
7325 %/%3600
7325 %% 60
7325 %/% 60
7325/60
(7325 / 60) %%60
(7325 / 60) %% 60
(7325 %/% 60) %% 60
2*3600+2*60+5
